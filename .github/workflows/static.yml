# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    env:
      APKREPO: ./repo
      PACKAGER: ${{ vars.ABUILD_PACKAGER }}
      BASE_URL: https://kalledk.github.io
      REPONAME: apk
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Generate Repo
        run: |
          set -ex
          echo "${{ steps.deployment.outputs.page_url }}"
          echo "::group::Setup Base"
          mkdir -p ${APKREPO}
          echo "::group::Setup Keys"
          printf -- '${{ secrets.ABUILD_KEY_PRIV }}' > ${{ vars.ABUILD_KEY_NAME }}.rsa
          printf -- '${{ secrets.ABUILD_KEY_PUB }}' > ${{ vars.ABUILD_KEY_NAME }}.rsa.pub
          cp ${{ vars.ABUILD_KEY_NAME }}.rsa.pub ${APKREPO}/
          
          echo "::group::Setup x86_64"
          mkdir -p ${APKREPO}/x86_64
          cp ./x86_64/*/*.apk ${APKREPO}/x86_64/
          apk index -o ${APKREPO}/x86_64/APKINDEX.tar.gz ${APKREPO}/x86_64/*.apk
          abuild-sign -k ${{ vars.ABUILD_KEY_NAME }}.rsa ${APKREPO}/x86_64/APKINDEX.tar.gz
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: ${APKREPO}
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
